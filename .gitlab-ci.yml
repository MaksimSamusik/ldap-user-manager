stages:
  - test
  - build
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

test:
  stage: test
  image: python:3.12
  script:
    - pip install -r requirements.txt
  artifacts:
    when: always
  only:
    - main

build:
  stage: build
  image: docker:latest  # Образ с установленным Docker
  services:
    - docker:dind  # Docker-in-Docker сервис
  before_script:
    - docker info  # Теперь эта команда будет работать
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker-compose build
    - docker-compose push
  only:
    - main

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client rsync docker-cli
  script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
    - ssh $SSH_USER@$SERVER_IP "
        cd $PROJECT_DIR &&
        docker-compose pull &&
        docker-compose down &&
        docker-compose up -d
      "
  only:
    - main